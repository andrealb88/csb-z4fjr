{"version":3,"sources":["components/contextProvider/contextApp.jsx","components/dropdown/InputDropdown.js","components/dropdown/Dropdown.js","components/buttonSearch/ButtonSearch.jsx","components/nav/Nav.js","components/card/Card.js","components/notification/notification.js","components/result/Result.js","components/button/Button.js","components/header/Header.js","components/loading/Loading.js","App.js","reportWebVitals.js","index.js"],"names":["AppContext","React","createContext","AppProvider","children","useState","search","setSearch","input","setInput","newListaGifs","setNewListaGifs","autocomplete","setAutocomplete","searchedText","setSearchedText","theme","setTheme","Provider","value","handlerTheme","handlerInput","e","target","handlerSearch","InputDropdown","props","useContext","className","name","length","onClick","onChange","type","Dropdown","map","objeto","index","ButtonSearch","useEffect","document","getElementById","addEventListener","id","onKeyDown","keycode","which","alert","placeholder","src","alt","Nav","Card","url","Notification","notification","Result","Object","keys","pagination","count","data","images","original","Button","Header","Loading","App","fetch","then","response","json","catch","error","console","log","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.932d566e.chunk.js","sourcesContent":["import { useState } from \"react\";\r\nimport React from \"react\";\r\n\r\nexport const AppContext = React.createContext();\r\n\r\nexport function AppProvider({ children }) {\r\n  const [search, setSearch] = useState(false);\r\n  const [input, setInput] = useState(\"\");\r\n  const [newListaGifs, setNewListaGifs] = useState({});\r\n  const [autocomplete, setAutocomplete] = useState([]);\r\n  const [searchedText, setSearchedText] = useState(\"\");\r\n  const [theme, setTheme] = useState(\"light\");\r\n  const handlerTheme = () => {\r\n    theme === \"light\" ? setTheme(\"dark\") : setTheme(\"light\");\r\n  };\r\n  const handlerInput = (e) => {\r\n    setInput(e.target.value);\r\n  };\r\n  const handlerSearch = (e) => {\r\n    setSearch(true);\r\n    setSearchedText(input);\r\n  };\r\n  return (\r\n    <AppContext.Provider\r\n      value={{\r\n        theme,\r\n        handlerTheme,\r\n        input,\r\n        setInput,\r\n        handlerInput,\r\n        autocomplete,\r\n        setAutocomplete,\r\n        search,\r\n        setSearch,\r\n        handlerSearch,\r\n        searchedText,\r\n        setSearchedText,\r\n        newListaGifs,\r\n        setNewListaGifs\r\n      }}\r\n    >\r\n      {children}\r\n    </AppContext.Provider>\r\n  );\r\n}\r\n","import \"./Dropdown.css\";\r\nimport { AppContext } from \"../contextProvider/contextApp\";\r\nimport React from \"react\";\r\n\r\nexport const InputDropdown = (props) => {\r\n  const { setInput, setSearch, setSearchedText } = React.useContext(AppContext);\r\n  const handlerUpdateInput = (e) => {\r\n    setInput(props.name);\r\n    setSearchedText(props.name);\r\n    setSearch(true);\r\n  };\r\n  return (\r\n    <input\r\n      className={\r\n        props.name.length > 0\r\n          ? \"autocomplete-items input-search\"\r\n          : \"no-autocomplete\"\r\n      }\r\n      value={props.name}\r\n      onClick={handlerUpdateInput}\r\n      onChange={() => {}}\r\n      type=\"text\"\r\n    />\r\n  );\r\n};\r\n","import \"./Dropdown.css\";\r\nimport { InputDropdown } from \"./InputDropdown\";\r\nimport { AppContext } from \"../contextProvider/contextApp\";\r\nimport React from \"react\";\r\n\r\nexport const Dropdown = () => {\r\n  const { autocomplete } = React.useContext(AppContext);\r\n  return (\r\n    <div className=\"autocomplete\">\r\n      {autocomplete.length > 0\r\n        ? autocomplete.map((objeto, index) => {\r\n            return <InputDropdown key={index} name={objeto.name} />;\r\n          })\r\n        : null}\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport \"./ButtonSearch.css\";\r\nimport { Dropdown } from \"../dropdown/Dropdown\";\r\nimport { useEffect } from \"react\";\r\nimport { AppContext } from \"../contextProvider/contextApp\";\r\n\r\nexport const ButtonSearch = () => {\r\n  const {\r\n    handlerSearch,\r\n    autocomplete,\r\n    setAutocomplete,\r\n    input,\r\n    handlerInput\r\n  } = React.useContext(AppContext);\r\n\r\n  useEffect(() => {\r\n    const cleanInput = () => setAutocomplete([]);\r\n    document.getElementById(\"searchbox\").addEventListener(\"search\", cleanInput);\r\n  }, [setAutocomplete]);\r\n  const enterSearch = (e) => {\r\n    if (e.keycode === 13 || e.which === 13) {\r\n      handlerSearch(input);\r\n      if (input.length === 0) {\r\n        alert(\"Por favor,ingrese algo antes de buscar\");\r\n      }\r\n    }\r\n  };\r\n  return (\r\n    <div\r\n      className={\r\n        autocomplete.length > 0\r\n          ? \"search-open flex-row\"\r\n          : \"search-close flex-row\"\r\n      }\r\n    >\r\n      <div className=\"container-searched\">\r\n        <input\r\n          id=\"searchbox\"\r\n          autocomplete=\"off\"\r\n          value={input}\r\n          onChange={handlerInput}\r\n          onKeyDown={enterSearch}\r\n          className=\"input-search first-input\"\r\n          type=\"search\"\r\n          placeholder=\"Busca gifs\"\r\n        />\r\n        <Dropdown />\r\n      </div>\r\n      <button\r\n        className={\r\n          autocomplete.length > 0 ? \"btn-search btn-open\" : \"btn-search\"\r\n        }\r\n        onClick={handlerSearch}\r\n      >\r\n        <img\r\n          className=\"center icon-search\"\r\n          src=\"./images/icon-search-mod-noc.svg\"\r\n          alt=\"icono\"\r\n        />\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n","import \"./Nav.css\";\r\nimport { ButtonSearch } from \"../buttonSearch/ButtonSearch\";\r\n\r\nexport const Nav = () => {\r\n  return (\r\n    <nav className=\"nav center flex-column\">\r\n      <h1 className=\"principal-title violet-text\">\r\n        Â¡Inspirate y busca los mejores GIFS!\r\n      </h1>\r\n      <img className=\"center\" src=\"./images/ilustra_header.svg\" alt=\"people\" />\r\n      <ButtonSearch />\r\n    </nav>\r\n  );\r\n};\r\n","import \"./Card.css\";\r\n\r\nexport const Card = (props) => {\r\n  return <img className=\"card\" src={props.url} alt=\"gif\"></img>;\r\n};\r\n","import \"./notification.css\";\r\n\r\nexport const Notification = (props) => {\r\n  return (\r\n    <div className=\"notification\">\r\n      <p className=\"violet-text\">{props.notification}</p>\r\n    </div>\r\n  );\r\n};\r\n","import \"./Result.css\";\r\nimport { Card } from \"../card/Card\";\r\nimport { Notification } from \"../notification/notification\";\r\nimport { AppContext } from \"../contextProvider/contextApp\";\r\nimport React from \"react\";\r\n\r\nexport const Result = () => {\r\n  const { newListaGifs, searchedText } = React.useContext(AppContext);\r\n  return (\r\n    <section className=\"section center flex-column\">\r\n      <h3 className=\"violet-text secundary-title\">\r\n        {Object.keys(newListaGifs).length > 0\r\n          ? `Resultados de la bÃºsqueda:${searchedText}`\r\n          : null}\r\n      </h3>\r\n      <div className=\"cards-container flex-row\">\r\n        {Object.keys(newListaGifs).length > 0 ? (\r\n          newListaGifs.pagination.count === 0 ? (\r\n            <Notification\r\n              notification={\r\n                \"No se encontraron gifs con la categorÃ­a introducida\"\r\n              }\r\n            />\r\n          ) : (\r\n            newListaGifs.data.map((objeto) => {\r\n              return <Card key={objeto.id} url={objeto.images.original.url} />;\r\n            })\r\n          )\r\n        ) : (\r\n          <Notification notification={\"Por favor realizar una bÃºsqueda\"} />\r\n        )}\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n","import \"./Button.css\";\r\nimport React from \"react\";\r\nimport { AppContext } from \"../contextProvider/contextApp\";\r\n\r\nexport const Button = () => {\r\n  const { theme, handlerTheme } = React.useContext(AppContext);\r\n  return (\r\n    <>\r\n      <button className=\"btn violet-text\" value={theme} onClick={handlerTheme}>\r\n        MODO {theme === \"light\" ? \"DARK\" : \"LIGHT\"}\r\n      </button>\r\n    </>\r\n  );\r\n};\r\n","import \"./Header.css\";\r\nimport { Button } from \"../button/Button\";\r\nimport { useContext } from \"react\";\r\nimport { AppContext } from \"../contextProvider/contextApp\";\r\n\r\nexport const Header = () => {\r\n  const { theme } = useContext(AppContext);\r\n  return (\r\n    <header className=\"header flex-row\">\r\n      {theme === \"light\" ? (\r\n        <img className=\"logo\" src=\"./images/logo-desktop.svg\" alt=\"logo\" />\r\n      ) : (\r\n        <img\r\n          className=\"logo\"\r\n          src=\"./images/logo-mobile-modo-noct.svg\"\r\n          alt=\"logo\"\r\n        />\r\n      )}\r\n      <Button />\r\n    </header>\r\n  );\r\n};\r\n","import \"./Loading.css\";\r\n\r\nexport const Loading = () => {\r\n  return (\r\n    <div className=\"loading center\">\r\n      <img className=\"img-loading\" src=\"./images/loading.svg\" alt=\"loading\" />\r\n    </div>\r\n  );\r\n};\r\n","import \"./App.css\";\nimport React, { useEffect } from \"react\";\nimport { AppContext } from \"./components/contextProvider/contextApp\";\nimport { Nav } from \"./components/nav/Nav\";\nimport { Result } from \"./components/result/Result\";\nimport { Header } from \"./components/header/Header\";\nimport { Loading } from \"./components/loading/Loading\";\n\nexport function App() {\n  const {\n    theme,\n    input,\n    setInput,\n    setAutocomplete,\n    search,\n    setSearch,\n    setNewListaGifs\n  } = React.useContext(AppContext);\n\n  useEffect(() => {\n    if (search) {\n      fetch(\n        `https://api.giphy.com/v1/gifs/search?api_key=fpXXuICjM9Qt2GRH8ygx77rySBq5yjoi&q=${input}&limit=12&offset=0&rating=g&lang=en`\n      )\n        .then((response) => response.json())\n        .then((data) => {\n          setNewListaGifs(data);\n          setSearch(false);\n          setInput(\"\");\n          setAutocomplete([]);\n        })\n        .catch((error) => console.log(error));\n    }\n  }, [search]);\n\n  useEffect(() => {\n    if (input) {\n      fetch(\n        `https://api.giphy.com/v1/gifs/search/tags?api_key=fpXXuICjM9Qt2GRH8ygx77rySBq5yjoi&q=${input}&limit=5&offset=0&rating=g&lang=en`\n      )\n        .then((response) => response.json())\n        .then((data) => setAutocomplete(data.data))\n        .catch((error) => console.log(error));\n    }\n  }, [input, setAutocomplete]);\n\n  return (\n    <div className={`App ${theme} center`}>\n      <div className=\"principal-container\">\n        <Header />\n        <Nav />\n        {\n          search ? <Loading /> : <Result />\n          // <Result newListaGifs={newListaGifs} searchedText={searchedText} />\n        }\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App.js\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { AppProvider } from \"./components/contextProvider/contextApp\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <AppProvider>\n      <App />\n    </AppProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\nreportWebVitals();\n\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>,\n//   document.getElementById(\"root\")\n// );\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}